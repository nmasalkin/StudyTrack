package ru.vsu.cs.masalkin.service.impl;

import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import ru.vsu.cs.masalkin.entity.AppUser;
import ru.vsu.cs.masalkin.entity.SubjectMarks;
import ru.vsu.cs.masalkin.repository.AppUserRepository;
import ru.vsu.cs.masalkin.api.ApiService;
import ru.vsu.cs.masalkin.service.JsonMapper;
import ru.vsu.cs.masalkin.service.MainService;
import ru.vsu.cs.masalkin.messaging.ProducerService;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@Service
public class MainServiceImpl implements MainService {

    private final ProducerService producerService;
    private final AppUserRepository appUserRepository;
    private final JsonMapper jsonMapper;
    private final ApiService apiService;

    public MainServiceImpl(ProducerService producerService, AppUserRepository appUserRepository, JsonMapper jsonMapper, ApiService apiService) {
        this.producerService = producerService;
        this.appUserRepository = appUserRepository;
        this.jsonMapper = jsonMapper;
        this.apiService = apiService;
    }

    public void menuProcess(Long chatId) {
        var sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("‚û°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ");

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üìä –°–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫ –ø–æ —Å–µ–º–µ—Å—Ç—Ä–∞–º");
        inlineKeyboardButton1.setCallbackData("/semester_list");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        List<InlineKeyboardButton> lineOfButtons2 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton();
        inlineKeyboardButton2.setText("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ");
        inlineKeyboardButton2.setCallbackData("/student_info");
        lineOfButtons2.add(inlineKeyboardButton2);
        listOfButtons.add(lineOfButtons2);

        List<InlineKeyboardButton> lineOfButtons3 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton();
        inlineKeyboardButton3.setText("üîî –í–∫–ª/–í—ã–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
        inlineKeyboardButton3.setCallbackData("/toggle_notification");
        lineOfButtons3.add(inlineKeyboardButton3);
        listOfButtons.add(lineOfButtons3);

        markupInline.setKeyboard(listOfButtons);
        sendMessage.setReplyMarkup(markupInline);

        producerService.produceAnswer(sendMessage);
    }

    public void menuProcess(Long chatId, Integer messageId) {
        var editMessageText = new EditMessageText();
        editMessageText.setChatId(chatId);
        editMessageText.setMessageId(messageId);
        editMessageText.setText("‚û°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ");

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üìä –°–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫ –ø–æ —Å–µ–º–µ—Å—Ç—Ä–∞–º");
        inlineKeyboardButton1.setCallbackData("/semester_list");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        List<InlineKeyboardButton> lineOfButtons2 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton();
        inlineKeyboardButton2.setText("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ");
        inlineKeyboardButton2.setCallbackData("/student_info");
        lineOfButtons2.add(inlineKeyboardButton2);
        listOfButtons.add(lineOfButtons2);

        List<InlineKeyboardButton> lineOfButtons3 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton();
        inlineKeyboardButton3.setText("üîî –í–∫–ª/–í—ã–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
        inlineKeyboardButton3.setCallbackData("/toggle_notification");
        lineOfButtons3.add(inlineKeyboardButton3);
        listOfButtons.add(lineOfButtons3);

        markupInline.setKeyboard(listOfButtons);
        editMessageText.setReplyMarkup(markupInline);

        producerService.produceEditAnswer(editMessageText);
    }

    public void chooseSemesterProcess(Long chatId, Integer messageId) {
        var editMessage = new EditMessageText();
        editMessage.setChatId(chatId);
        editMessage.setMessageId(messageId);
        editMessage.setText("‚û°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–º–µ—Å—Ç—Ä –∏–∑ —Å–ø–∏—Å–∫–∞");

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        for (int i = appUserRepository.findByChatId(chatId).getCurrentSemester(); i > 0; i--) {
            List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
            InlineKeyboardButton inlineKeyboardButton = new InlineKeyboardButton();
            if (i == appUserRepository.findByChatId(chatId).getCurrentSemester()) {
                inlineKeyboardButton.setText("–°–µ–º–µ—Å—Ç—Ä ‚Ññ" + i + " (—Ç–µ–∫—É—â–∏–π)");
            } else {
                inlineKeyboardButton.setText("–°–µ–º–µ—Å—Ç—Ä ‚Ññ" + i);
            }
            inlineKeyboardButton.setCallbackData("/semester_" + i);
            lineOfButtons1.add(inlineKeyboardButton);

            listOfButtons.add(lineOfButtons1);
        }

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é");
        inlineKeyboardButton1.setCallbackData("/menu");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        markupInline.setKeyboard(listOfButtons);
        editMessage.setReplyMarkup(markupInline);

        producerService.produceEditAnswer(editMessage);
    }

    public void semesterProcess(int semesterNumber, Long chatId, Integer messageId) {
        var editMessageText = new EditMessageText();
        editMessageText.setChatId(chatId);
        editMessageText.setMessageId(messageId);
        editMessageText.setParseMode("MarkdownV2");
        if (!appUserRepository.existsByChatId(chatId)) {
            editMessageText.setText("‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\\. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –æ—Ü–µ–Ω–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ë–†–° üìö");
        }

        List<SubjectMarks> subjectMarks = jsonMapper.getStudentMarksBySemester(appUserRepository.findByChatId(chatId).getStudentMarks(), semesterNumber);

        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(String.format("üìä *__–í–∞—à–∏ –æ—Ü–µ–Ω–∫–∏ –∑–∞ %d —Å–µ–º–µ—Å—Ç—Ä:__*\n\n", semesterNumber));

        if (subjectMarks.isEmpty()) {
            editMessageText.setText("üìå –û—Ü–µ–Ω–∫–∏ –∑–∞ –¥–∞–Ω–Ω—ã–π —Å–µ–º–µ—Å—Ç—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç");
        } else {
            for (SubjectMarks subjectMark : subjectMarks) {
                stringBuilder.append(String.format("*%s*:\n" +
                                                   "–ê—Ç—Ç1:  *%d*,  –ê—Ç—Ç2:  *%d*,  –ê—Ç—Ç3:  *%d*\n" +
                                                   "–ò—Ç–æ–≥:  *%d\\(%s\\)*",
                        subjectMark.getSubjectName(), subjectMark.getAtt1(), subjectMark.getAtt2(), subjectMark.getAtt3(), subjectMark.getResult(), subjectMark.getResult5()));
                stringBuilder.append("\n\n");
            }
            var sb = new StringBuilder(stringBuilder.toString().replace("+", "\\+").replace("-", "\\-").replace("null", "~   ~").replace(".", "\\."));
            editMessageText.setText(sb.toString());
        }

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é");
        inlineKeyboardButton1.setCallbackData("/menu");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        markupInline.setKeyboard(listOfButtons);
        editMessageText.setReplyMarkup(markupInline);

        producerService.produceEditAnswer(editMessageText);
    }

    public void studentInfoProcess(Long chatId, Integer messageId) {
        var editMessageText = new EditMessageText();
        editMessageText.setChatId(chatId);
        editMessageText.setMessageId(messageId);
        editMessageText.setParseMode("MarkdownV2");

        Map<String, Object> studentInfo = apiService.getStudentInfo(chatId);

        if (studentInfo == null) {
            editMessageText.setText("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ\\.");
        } else {
            editMessageText.setText(String.format(
                    "*–§–ò–û:*\n" + "%s %s %s\n\n" +
                    "*–§–∞–∫—É–ª—å—Ç–µ—Ç:*\n" + "%s\n\n" +
                    "*–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:*\n" + "%s\n\n" +
                    "*–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:*\n" + "%s\n\n" +
                    "*–¢–µ–∫—É—â–∏–π —Å–µ–º–µ—Å—Ç—Ä:*\n" + "%d\n\n" +
                    "*–ì—Ä—É–ø–ø–∞:*\n" + "%d\\.%d",
                    studentInfo.get("surname"), studentInfo.get("firstname"), studentInfo.get("middlename"),
                    studentInfo.get("faculty_name"), studentInfo.get("specialization"), studentInfo.get("specialty_name"),
                    (Integer) studentInfo.get("semester"), (Integer) studentInfo.get("group"), (Integer) studentInfo.get("sub_group")));
        }

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é");
        inlineKeyboardButton1.setCallbackData("/menu");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        markupInline.setKeyboard(listOfButtons);
        editMessageText.setReplyMarkup(markupInline);

        producerService.produceEditAnswer(editMessageText);
    }

    public void toggleNotificationProcess(Long chatId, Integer messageId) {
        var editMessageText = new EditMessageText();
        editMessageText.setChatId(chatId);
        editMessageText.setMessageId(messageId);
        AppUser appUser = appUserRepository.findByChatId(chatId);
        appUser.setToggleNotification(!appUser.isToggleNotification());
        appUserRepository.save(appUser);
        editMessageText.setText("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è " + (appUser.isToggleNotification() ? "–≤–∫–ª—é—á–µ–Ω—ã üîî" : "–≤—ã–∫–ª—é—á–µ–Ω—ã üîï"));

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> listOfButtons = new ArrayList<>();

        List<InlineKeyboardButton> lineOfButtons1 = new ArrayList<>();
        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é");
        inlineKeyboardButton1.setCallbackData("/menu");
        lineOfButtons1.add(inlineKeyboardButton1);
        listOfButtons.add(lineOfButtons1);

        markupInline.setKeyboard(listOfButtons);
        editMessageText.setReplyMarkup(markupInline);

        producerService.produceEditAnswer(editMessageText);
    }

    public void aboutBotProcess(Long chatId) {
        var sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setParseMode("MarkdownV2");
        sendMessage.setText("ü§ñ –î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö —Å —Å–∏—Å—Ç–µ–º—ã –ë–†–°\\.\n" +
                            "\n" +
                            "–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Å–≤–æ–∏—Ö —É—Å–ø–µ—Ö–æ–≤, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –Ω–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏\\! üîî\n" +
                            "\n" +
                            "üì© –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ Telegram: \\[–°–≤—è–∑–∞—Ç—å—Å—è\\]\\(https://t\\.me/el\\_nikitinho\\)");
        producerService.produceAnswer(sendMessage);
    }
}